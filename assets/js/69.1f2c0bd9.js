(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{384:function(v,_,l){"use strict";l.r(_);var i=l(3),s=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"《浏览器知识》-输入url后到页面加载的过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#《浏览器知识》-输入url后到页面加载的过程"}},[v._v("#")]),v._v(" 《浏览器知识》- 输入URL后到页面加载的过程")]),v._v(" "),_("p",[v._v("DNS 解析\nTCP 连接\n发送 HTTP 请求\n服务器处理请求并返回 HTTP 报文\n浏览器解析渲染页面\n连接结束")]),v._v(" "),_("h2",{attrs:{id:"url解析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#url解析"}},[v._v("#")]),v._v(" URL解析")]),v._v(" "),_("ul",[_("li",[v._v("首先得解析url是否合法")]),v._v(" "),_("li",[v._v("DNS 解析，获取目标ip地址")]),v._v(" "),_("li",[v._v("三次握手建立TCP 连接\n"),_("ul",[_("li",[v._v("如果含有https，需要在进行一次https握手")])])]),v._v(" "),_("li",[v._v("发送 HTTP 请求")]),v._v(" "),_("li",[v._v("服务器处理请求并且返回http报文")]),v._v(" "),_("li",[v._v("浏览器解析渲染页面")]),v._v(" "),_("li",[v._v("四次挥手断开连接")])]),v._v(" "),_("h3",{attrs:{id:"dns域名解析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dns域名解析"}},[v._v("#")]),v._v(" DNS域名解析")]),v._v(" "),_("ul",[_("li",[v._v("dns域名查询过程\n"),_("ul",[_("li",[v._v("先在浏览器查询dns缓存，在缓存中维护一张域名对应ip的表")]),v._v(" "),_("li",[v._v("没有命中的话，就会去找操作系统的dns缓存，hosts文件夹")]),v._v(" "),_("li",[v._v("没有的话，就递归查找本地域名服务器")]),v._v(" "),_("li",[v._v("没有的话，就会向上级域名服务器进行迭代查询\n"),_("ul",[_("li",[v._v("因为每个域名都会有根域名，顶级域名，权限域名")]),v._v(" "),_("li",[v._v("所以在迭代查询时")]),v._v(" "),_("li",[v._v("依次查找根域名服务器，顶级域名服务器，权限域名服务器")]),v._v(" "),_("li",[v._v("最终会在权限域名服务器找到目标域名对应IP地址")])])]),v._v(" "),_("li",[v._v("将IP地址依次返回操作系统、浏览器并缓存下来")])])]),v._v(" "),_("li",[v._v("dns正向解析\n"),_("ul",[_("li",[v._v("将域名（主机）解析成ip地址")])])]),v._v(" "),_("li",[v._v("dns反向解析")])]),v._v(" "),_("h3",{attrs:{id:"浏览器缓存机制"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存机制"}},[v._v("#")]),v._v(" 浏览器缓存机制")]),v._v(" "),_("ul",[_("li",[v._v("判断浏览器是否有强缓存")]),v._v(" "),_("li",[v._v("如果有，就判断强缓存是否过期\n"),_("ul",[_("li",[v._v("如果没有过期，就从资源缓存中找")]),v._v(" "),_("li",[v._v("如果过期，就判断是否存在响应头ETag\n"),_("ul",[_("li",[v._v("如果有，向服务器请求，并携带请求头If-none-match，根据服务端返回200还是304，返回资源")]),v._v(" "),_("li",[v._v("如果没有，就判断是否存在请求头Last-modified\n"),_("ul",[_("li",[v._v("如果有，向服务器请求，携带请求头If-modified-since，根据服务返回200还是304，返回资源")]),v._v(" "),_("li",[v._v("如果没有，直接向服务器发送请求，响应请求后，再进行缓存协商，返回资源")])])])])])])]),v._v(" "),_("li",[v._v("如果没有，直接向服务器请求资源，响应内容后再缓存协商，返回资源")])]),v._v(" "),_("h2",{attrs:{id:"页面解析渲染"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#页面解析渲染"}},[v._v("#")]),v._v(" 页面解析渲染")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("解析")]),v._v(" "),_("ul",[_("li",[v._v("解析HTML，生成DOM树")]),v._v(" "),_("li",[v._v("解析CSS，生成CSSOM树\n"),_("ul",[_("li",[v._v("css是渲染阻塞，需要等到所有css解析完后才开始渲染页面内容")]),v._v(" "),_("li",[v._v("css加载会阻塞html渲染，不会阻塞html解析")]),v._v(" "),_("li",[v._v("css加载会阻塞js语句的执行")]),v._v(" "),_("li",[v._v("加快css加载过程\n"),_("ul",[_("li",[v._v("cdn")]),v._v(" "),_("li",[v._v("压缩css")])])])])])])]),v._v(" "),_("li",[_("p",[v._v("渲染")]),v._v(" "),_("ul",[_("li",[v._v("将DOM树与CSSOM树结合生成Render树")]),v._v(" "),_("li",[v._v("进行layout\n"),_("ul",[_("li",[v._v("根据生成的Render树，进行回流，得到节点的几何信息，比如位置和大小\n"),_("ul",[_("li",[v._v("此时排除display:none的节点")])])])])]),v._v(" "),_("li",[v._v("绘制\n"),_("ul",[_("li",[v._v("对节点进行重绘")])])])])]),v._v(" "),_("li",[_("p",[v._v("交互")]),v._v(" "),_("ul",[_("li",[v._v("响应用户交互")])])])])])}),[],!1,null,null,null);_.default=s.exports}}]);